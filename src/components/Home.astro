---
import { getCollection } from 'astro:content'
import Note from '../components/Note.astro'
import { formatDate } from '../utils/date'
import Experiment from './Experiment.astro'
import Forward from '../assets/Forward.svg'
import { Image } from 'astro:assets'
import pointingLeftOriginal from '../assets/pointing-left-original.png'
import holdingSomething from '../assets/holding-something.webp'
import me from '../assets/me-v6.webp'

const notes = await getCollection('notes')
---

<main class="home-page">
  <section>
    <h2>About</h2>
    <div class="portrait-container">
      <Image src={holdingSomething} alt="Holding something" class="holdingSomething" />
      <div class="portrait-hover-wrapper">
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <Image src={me} alt="Me" height={1834} width={1544} class="portrait" />
      </div>
    </div>
    <p>
      But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain
      was born and I will give you a complete account of the system, and expound the actual
      teachings of the great explorer of the truth, the master-builder of human happiness. No one
      rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do
      not know how to pursue pleasure rationally encounter consequences that are extremely painful.
      Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it
      is pain, but because occasionally circumstances occur in which toil and pain can procure him
      some great pleasure. To take a trivial example, which of us ever undertakes laborious physical
      exercise, except to obtain some advantage from it? But who has any right to find fault with a
      man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a
      pain that produces no resultant pleasure?
    </p>
    <br />
    <p>
      On the other hand, we denounce with righteous indignation and dislike men who are so beguiled
      and demoralized by the charms of pleasure of the moment, so blinded by desire, that they
      cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those
      who fail in their duty through weakness of will, which is the same as saying through shrinking
      from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour,
      when our power of choice is untrammelled and when nothing prevents our being able to do what
      we like best, every pleasure is to be welcomed and every pain avoided. But in certain
      circumstances and owing to the claims of duty or the obligations of business it will
      frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man
      therefore always holds in these matters to this principle of selection: he rejects pleasures
      to secure other greater pleasures, or else he endures pains to avoid worse pains.
    </p>
  </section>

  <section>
    <a href="/notes" class="clickable-header category-header">
      <h2>Notes</h2>
      <Image
        src={pointingLeftOriginal}
        alt="Hand pointing left"
        class="pointing-left"
        width={324}
        height={104}
      />
    </a>
    <div class="grid">
      {
        notes.map((note) => {
          return (
            <Note
              title={note.data.title}
              text={note.data.preview}
              date={formatDate(note.data.date)}
              id={note.id}
            />
          )
        })
      }
    </div>
  </section>

  <section>
    <a href="/experiments" class="clickable-header category-header">
      <h2>Experiments</h2>
      <Image
        src={pointingLeftOriginal}
        alt="Hand pointing left"
        class="pointing-left"
        width={324}
        height={104}
      />
    </a>
    <div class="grid">
      <Experiment title="Experiment 1" category="Three JS" />
      <Experiment title="Experiment 2" category="Animation" />
      <Experiment
        title="Experiment 3 but it has a very long and awesome title"
        category="Category that is very long and awesome"
      />
      <Experiment title="Experiment 4" category="Inspired" />
      <Experiment title="Experiment 5" category="View Transitions" />
      <Experiment title="Experiment 6" category="CSS" />
    </div>
  </section>

  <section>
    <h2>Resume</h2>
    <iframe id="resumeFrame" src="/resume-v1.pdf#toolbar=0&navpanes=0" frameborder="0"></iframe>
    <p id="mobileResumePlaceholder">Inline PDFs are not supported on mobile.</p>
    <a href="/resume-v1.pdf" class="view-link">View Resume PDF</a>
  </section>

  <div class="screen">
    <p class="message">Trust the Process & Love Yourself</p>
  </div>
</main>

<script>
  // Save scroll position before navigation
  document.addEventListener('astro:before-preparation', () => {
    sessionStorage.setItem('homeScrollPosition', window.scrollY.toString())
  })

  // Restore scroll position after navigation
  document.addEventListener('astro:after-swap', () => {
    const savedPosition = sessionStorage.getItem('homeScrollPosition')
    if (savedPosition) {
      window.scrollTo({ top: parseInt(savedPosition), behavior: 'instant' })
    }
  })
</script>

<style>
  .pointing-left {
    width: auto;
    height: 26px;
    object-fit: contain;
    transition: transform 0.3s ease-out;
  }

  .portrait-container {
    position: relative;

    float: right;
    display: flex;

    width: 60%;
    padding-left: 12px;
  }

  .holdingSomething {
    pointer-events: none;

    z-index: 2;

    display: block;

    width: 30%;
    height: auto;
    margin-top: 32%;

    object-fit: contain;
    filter: contrast(85%);

    transition: 0.5s ease;
  }

  .portrait-hover-wrapper {
    position: relative;
    z-index: 1;

    width: 70%;
    height: fit-content;
    margin-left: -4%;

    .portrait {
      display: block;

      width: 100%;
      height: auto;

      object-fit: contain;
      box-shadow: 0 0 50px rgba(0, 0, 0, 0.3);

      transition: 0.5s ease;
    }

    .hover-point {
      position: absolute;
      z-index: 2;

      width: calc(100% / 3);
      height: calc(100% / 3);

      background-color: transparent;
    }

    .hover-point:nth-child(1) {
      top: 0;
      left: 0;
    }
    .hover-point:nth-child(2) {
      top: 0;
      left: calc(100% / 3);
    }
    .hover-point:nth-child(3) {
      top: 0;
      right: 0;
    }
    .hover-point:nth-child(4) {
      top: calc(100% / 3);
      left: 0;
    }
    .hover-point:nth-child(5) {
      top: calc(100% / 3);
      right: 0;
    }
    .hover-point:nth-child(6) {
      bottom: 0;
      left: 0;
    }
    .hover-point:nth-child(7) {
      bottom: 0;
      left: calc(100% / 3);
    }
    .hover-point:nth-child(8) {
      right: 0;
      bottom: 0;
    }

    .hover-point:nth-child(1):hover ~ .portrait {
      transform-origin: right top;
      transform: perspective(1000px) rotateX(10deg) rotateY(-10deg) rotateZ(2deg);
      box-shadow: 15px 15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(2):hover ~ .portrait {
      transform-origin: center top;
      transform: perspective(1000px) rotateX(10deg);
      box-shadow: 0 15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(3):hover ~ .portrait {
      transform-origin: left top;
      transform: perspective(1000px) rotateX(10deg) rotateY(10deg) rotateZ(-2deg);
      box-shadow: -15px 15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(4):hover ~ .portrait {
      transform-origin: left center;
      transform: perspective(1000px) rotateY(-10deg);
      box-shadow: 15px 5px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(5):hover ~ .portrait {
      transform-origin: right center;
      transform: perspective(1000px) rotateY(10deg);
      box-shadow: -15px 5px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(6):hover ~ .portrait {
      transform-origin: right bottom;
      transform: perspective(1000px) rotateX(-10deg) rotateY(-10deg) rotateZ(-2deg);
      box-shadow: 15px -15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(7):hover ~ .portrait {
      transform-origin: center bottom;
      transform: perspective(1000px) rotateX(-10deg);
      box-shadow: 0 -15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(8):hover ~ .portrait {
      transform-origin: left bottom;
      transform: perspective(1000px) rotateX(-10deg) rotateY(10deg) rotateZ(2deg);
      box-shadow: -15px -15px 50px rgba(0, 0, 0, 0.3);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(1):hover) {
    transform-origin: right top;
    transform: perspective(1000px) rotateX(10deg) rotateY(-10deg) rotateZ(2deg) translateX(4%);
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(2):hover) {
    transform-origin: center top;
    transform: perspective(1000px) rotateX(10deg) translateX(-6%);
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(3):hover) {
    transform-origin: left top;
    transform: perspective(1000px) rotateX(10deg) rotateY(10deg) rotateZ(-2deg) translateX(5%);

    @media (width <= 734px) {
      transform: perspective(1000px) rotateX(10deg) rotateY(10deg) rotateZ(-2deg) translateX(4%);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(4):hover) {
    transform-origin: left center;
    transform: perspective(1000px) rotateY(-10deg);
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(5):hover) {
    transform-origin: right center;
    transform: perspective(1000px) rotateY(10deg) translateX(-14%);

    @media (width <= 1068px) {
      transform: perspective(1000px) rotateY(10deg) translateX(-12%);
    }

    @media (width <= 850px) {
      transform: perspective(1000px) rotateY(10deg) translateX(-10%);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(6):hover) {
    transform-origin: right bottom;
    transform: perspective(1000px) rotateX(-10deg) rotateY(-10deg) rotateZ(-2deg) translateX(10%);

    @media (width <= 734px) {
      transform: perspective(1000px) rotateX(-10deg) rotateY(-10deg) rotateZ(-2deg) translateX(8%);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(7):hover) {
    transform-origin: center bottom;
    transform: perspective(1000px) rotateX(-10deg) translateX(-5%);

    @media (width <= 734px) {
      transform: perspective(1000px) rotateX(-10deg) translateX(-4%);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(8):hover) {
    transform-origin: left bottom;
    transform: perspective(1000px) rotateX(-10deg) rotateY(10deg) rotateZ(2deg);
  }

  .view-link {
    display: inline-block;

    margin-top: 0.5em;
    margin-left: -1em;
    padding: 1em;

    font-size: 14px;
    font-weight: 500;
    color: #007aff;
    text-decoration: none;
  }

  .message {
    cursor: default;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    width: fit-content;

    font-size: 0.9em;
    font-weight: 600;
    color: #6e6e73;

    animation: fadeOut 0.5s linear forwards;
    animation-play-state: paused;
  }

  .message:hover {
    animation-play-state: running;
  }

  #resumeFrame {
    display: block;
    aspect-ratio: 1 / 1.414;
    width: 80%;
    border: 2px solid #d5d5d5;
  }

  #mobileResumePlaceholder {
    display: none;
  }

  .category-header {
    display: flex;
    gap: 0.5em;
    align-items: end;

    width: fit-content;

    color: unset;
    text-decoration: none;

    h2 {
      margin: 0;
    }

    svg {
      box-sizing: content-box;
      width: 20px;
      height: 20px;
      padding-bottom: 5px;

      opacity: 0.5;
    }
  }

  .category-header:hover {
    .pointing-left {
      transform: translateX(-10px);
    }
  }

  h3 {
    margin-top: 2.5em;
    margin-bottom: 0.8em;
    font-size: 1.5em;
  }

  p {
    line-height: 1.5;
    color: grey;
  }

  .screen {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
  }

  @media (width <= 734px) {
    #resumeFrame {
      display: none;
    }

    #mobileResumePlaceholder {
      display: block;
    }

    .portrait-container {
      padding-left: 0;
    }
  }

  @keyframes fadeOut {
    to {
      opacity: 0;
    }
  }
</style>
