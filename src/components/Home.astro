---
import { getCollection } from 'astro:content'
import Note from '../components/Note.astro'
import { formatDate } from '../utils/date'
import Experiment from './Experiment.astro'
import Forward from '../assets/Forward.svg'
import { Image } from 'astro:assets'
import pointingLeftOriginal from '../assets/pointing-left-original.png'
import holdingSomething from '../assets/holding-something.webp'
import hand from '../assets/hand.webp'
import me from '../assets/me-v7.webp'
import cheers from '../assets/cheers.webp'
import AquaButton from './AquaButton.astro'
import AquaButtonSecond from './AquaButtonSecond.astro'

const notes = await getCollection('notes')
---

<main class="home-page">
  <section class="section about">
    <h2>About</h2>
    <div class="portrait-container">
      <Image src={holdingSomething} alt="Holding something" class="holdingSomething" />
      <div class="portrait-hover-wrapper">
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <div class="hover-point"></div>
        <Image src={me} alt="Me" height={1834} width={1544} class="portrait" />
      </div>
    </div>
    <p>Hello!</p>
    <p>
      I'm Ivan, software engineer, who likes to <a class="inline-link" href="#experiments"
        >experiment with web technologies</a
      > and
      <a class="inline-link" href="#notes">write about it</a>.
    </p>
    <p>
      I'm currently working as a frontend developer at <a
        class="inline-link"
        href="https://kontur.ru"
        target="_blank"
        rel="noopener noreferrer">Kontur</a
      >, where i lead UX/UI engineering for <a
        class="inline-link"
        href="https://kontur.ru/talk"
        target="_blank"
        rel="noopener noreferrer">Kontur.Talk</a
      >, building the bridge between creative design and technical implementation, with a focus on
      performance, maintainability and accessibility.
    </p>
    <p>I also like lifting weights, running, playing badminton and cooking.</p>
    <p class="marginless">I'm currently based in Sochi üåÖ</p>
    <p>
      I was born in <a href="notes/norilsk" class="inline-link">Norilsk</a> and lived there for 15 years
      ‚ùÑÔ∏è
    </p>
    <p>
      You can write to me at <a href="mailto:mail@esmantovi.ch" class="inline-link"
        >mail@esmantovi.ch</a
      >
    </p>
  </section>

  <section>
    <a href="/notes" class="clickable-header category-header">
      <h2 id="notes">Notes</h2>
      <Image
        src={pointingLeftOriginal}
        alt="Hand pointing left"
        class="pointing-left"
        width={324}
        height={104}
      />
    </a>
    <div class="grid">
      {
        notes.map((note) => {
          return (
            <Note
              title={note.data.title}
              text={note.data.preview}
              date={formatDate(note.data.date)}
              id={note.id}
            />
          )
        })
      }
    </div>
  </section>

  <section>
    <a href="/experiments" class="clickable-header category-header">
      <h2 id="experiments">Experiments</h2>
      <Image
        src={pointingLeftOriginal}
        alt="Hand pointing left"
        class="pointing-left"
        width={324}
        height={104}
      />
    </a>
    <div class="grid">
      <Experiment title="Experiment 1" category="Three JS" />
      <Experiment title="Experiment 2" category="Animation" />
      <Experiment
        title="Experiment 3 but it has a very long and awesome title"
        category="Category that is very long and awesome"
      />
      <Experiment title="Experiment 4" category="Inspired" />
      <Experiment title="Experiment 5" category="View Transitions" />
      <Experiment title="Experiment 6" category="CSS" />
    </div>
    <AquaButton text="Download PDF" color="gray" />
    <!-- <AquaButtonSecond text="Download PDF" color="blue" /> -->
  </section>

  <section>
    <h2 id="projects">Projects</h2>
    <p>üößüößüöß</p>
  </section>

  <section>
    <h2>Resume</h2>
    <iframe id="resumeFrame" src="/resume-v1.pdf#toolbar=0&navpanes=0" frameborder="0"></iframe>
    <p id="mobileResumePlaceholder">Inline PDFs are not supported on mobile.</p>
    <!-- <a href="/resume-v1.pdf" class="view-link">View Resume PDF</a> -->
    <!-- <AquaButton text="Download PDF" color="gray" /> -->
    <AquaButtonSecond text="Download PDF" color="blue" />
  </section>

  <section class="site">
    <h2>About this site</h2>
    <p>
      This site is built with <a href="https://astro.build" class="inline-link">Astro</a> and deployed
      via <a href="https://pages.cloudflare.com" class="inline-link">Cloudflare Pages</a>.
    </p>
    <p>
      The source code is available on <a
        href="https://github.com/ivanesmantovich/esmantovi.ch"
        class="inline-link">GitHub</a
      >.
    </p>
  </section>

  <div class="screen">
    <div class="offering-hand-container">
      <Image src={hand} id="offering-hand" alt="Hand offering something" width={500} />
      <div id="bubble-container"></div>
    </div>
  </div>
</main>

<script>
  // Save scroll position before navigation
  document.addEventListener('astro:before-preparation', () => {
    sessionStorage.setItem('homeScrollPosition', window.scrollY.toString())
  })

  // Restore scroll position after navigation
  document.addEventListener('astro:after-swap', () => {
    const savedPosition = sessionStorage.getItem('homeScrollPosition')
    if (savedPosition) {
      window.scrollTo({ top: parseInt(savedPosition), behavior: 'instant' })
    }
  })

  // Add click handler to hand
  const hand = document.getElementById('offering-hand')
  if (hand) {
    hand.addEventListener('click', () => {
      console.log('clicked')
      const bubbleContainer = document.getElementById('bubble-container')
      if (bubbleContainer) {
        const bubbles = [
          '<span class="emoji">üîÆ</span>',
          '<span class="emoji">üíø</span>',
          '<span class="emoji">üåû</span>',
          '<span class="emoji">üåÖ</span>',
          '<span class="emoji">üèïÔ∏èüêå</span>',
          'Trust the Process & Love Yourself',
          'The mind is everything. What you think you become',
          'Let go of what has passed. Let go of what may come. Let go of what is happening now',
          'The quieter you become, the more you can hear',
          'Within you there is a stillness and sanctuary to which you can retreat at any time',
          'There is more to life than increasing its speed',
          "Love says 'I am everything.' Wisdom says 'I am nothing.' Between the two, my life flows",
          '<img class="bubble-image" src="cheers.webp" alt="cheers" />',
        ]
        const bubble = document.createElement('span')
        bubble.classList.add('bubble', 'fly-away')
        bubble.innerHTML = bubbles[Math.floor(Math.random() * bubbles.length)]
        bubbleContainer.appendChild(bubble)
        setTimeout(() => {
          bubbleContainer.removeChild(bubble)
        }, 7000)
      }
    })
  }
</script>

<style>
  .home-page {
    max-width: 1024px;
    margin: 0 auto;
    padding-right: 4%;
    padding-left: 4%;
  }

  .grid {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    gap: 20px;
    margin-bottom: 8px;
  }

  section.about p {
    margin-bottom: 1.5em;
    line-height: 1.5em;
  }

  section.about p.marginless {
    margin-bottom: 0;
  }

  .pointing-left {
    width: auto;
    height: 26px;
    object-fit: contain;
    transition: transform 0.3s ease-out;
  }

  .screen {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;

    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .offering-hand-container {
    position: relative;
  }

  #offering-hand {
    cursor: pointer;
    height: auto;
    width: 500px;
    max-width: 80vw;
    aspect-ratio: 1.35;
    transition: transform 0.2s ease-out;

    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    touch-action: pan-y;
    -webkit-user-drag: none;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent;
  }

  #offering-hand:hover {
    transform: scale(1.1);
  }

  #offering-hand:active {
    transform: scale(0.9);
  }

  #bubble-container {
    position: absolute;
    top: 35%;
    width: 100%;
    /* background-color: pink; */
    padding-right: 35px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .portrait-container {
    position: relative;

    float: right;
    display: flex;

    width: 55%;
    padding-left: 12px;
  }

  .holdingSomething {
    pointer-events: none;

    z-index: 2;

    display: block;

    width: 30%;
    height: auto;
    margin-top: 32%;

    object-fit: contain;
    filter: contrast(85%);

    transition: 0.5s ease;
  }

  .portrait-hover-wrapper {
    position: relative;
    z-index: 1;

    width: 70%;
    height: fit-content;
    margin-left: -4%;

    .portrait {
      display: block;

      width: 100%;
      height: auto;

      object-fit: contain;
      box-shadow: 0 0 50px rgba(0, 0, 0, 0.3);

      transition: 0.5s ease;
    }

    .hover-point {
      position: absolute;
      z-index: 2;

      width: calc(100% / 3);
      height: calc(100% / 3);

      background-color: transparent;
    }

    .hover-point:nth-child(1) {
      top: 0;
      left: 0;
    }
    .hover-point:nth-child(2) {
      top: 0;
      left: calc(100% / 3);
    }
    .hover-point:nth-child(3) {
      top: 0;
      right: 0;
    }
    .hover-point:nth-child(4) {
      top: calc(100% / 3);
      left: 0;
    }
    .hover-point:nth-child(5) {
      top: calc(100% / 3);
      right: 0;
    }
    .hover-point:nth-child(6) {
      bottom: 0;
      left: 0;
    }
    .hover-point:nth-child(7) {
      bottom: 0;
      left: calc(100% / 3);
    }
    .hover-point:nth-child(8) {
      right: 0;
      bottom: 0;
    }

    .hover-point:nth-child(1):hover ~ .portrait {
      transform-origin: right top;
      transform: perspective(1000px) rotateX(10deg) rotateY(-10deg) rotateZ(2deg);
      box-shadow: 15px 15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(2):hover ~ .portrait {
      transform-origin: center top;
      transform: perspective(1000px) rotateX(10deg);
      box-shadow: 0 15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(3):hover ~ .portrait {
      transform-origin: left top;
      transform: perspective(1000px) rotateX(10deg) rotateY(10deg) rotateZ(-2deg);
      box-shadow: -15px 15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(4):hover ~ .portrait {
      transform-origin: left center;
      transform: perspective(1000px) rotateY(-10deg);
      box-shadow: 15px 5px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(5):hover ~ .portrait {
      transform-origin: right center;
      transform: perspective(1000px) rotateY(10deg);
      box-shadow: -15px 5px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(6):hover ~ .portrait {
      transform-origin: right bottom;
      transform: perspective(1000px) rotateX(-10deg) rotateY(-10deg) rotateZ(-2deg);
      box-shadow: 15px -15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(7):hover ~ .portrait {
      transform-origin: center bottom;
      transform: perspective(1000px) rotateX(-10deg);
      box-shadow: 0 -15px 50px rgba(0, 0, 0, 0.3);
    }
    .hover-point:nth-child(8):hover ~ .portrait {
      transform-origin: left bottom;
      transform: perspective(1000px) rotateX(-10deg) rotateY(10deg) rotateZ(2deg);
      box-shadow: -15px -15px 50px rgba(0, 0, 0, 0.3);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(1):hover) {
    transform-origin: right top;
    transform: perspective(1000px) rotateX(10deg) rotateY(-10deg) rotateZ(2deg) translateX(4%);
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(2):hover) {
    transform-origin: center top;
    transform: perspective(1000px) rotateX(10deg) translateX(-6%);
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(3):hover) {
    transform-origin: left top;
    transform: perspective(1000px) rotateX(10deg) rotateY(10deg) rotateZ(-2deg) translateX(5%);

    @media (width <= 734px) {
      transform: perspective(1000px) rotateX(10deg) rotateY(10deg) rotateZ(-2deg) translateX(4%);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(4):hover) {
    transform-origin: left center;
    transform: perspective(1000px) rotateY(-10deg);
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(5):hover) {
    transform-origin: right center;
    transform: perspective(1000px) rotateY(10deg) translateX(-14%);

    @media (width <= 1068px) {
      transform: perspective(1000px) rotateY(10deg) translateX(-12%);
    }

    @media (width <= 850px) {
      transform: perspective(1000px) rotateY(10deg) translateX(-10%);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(6):hover) {
    transform-origin: right bottom;
    transform: perspective(1000px) rotateX(-10deg) rotateY(-10deg) rotateZ(-2deg) translateX(10%);

    @media (width <= 734px) {
      transform: perspective(1000px) rotateX(-10deg) rotateY(-10deg) rotateZ(-2deg) translateX(8%);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(7):hover) {
    transform-origin: center bottom;
    transform: perspective(1000px) rotateX(-10deg) translateX(-5%);

    @media (width <= 734px) {
      transform: perspective(1000px) rotateX(-10deg) translateX(-4%);
    }
  }

  .holdingSomething:has(+ .portrait-hover-wrapper > .hover-point:nth-child(8):hover) {
    transform-origin: left bottom;
    transform: perspective(1000px) rotateX(-10deg) rotateY(10deg) rotateZ(2deg);
  }

  .inline-link {
    color: inherit;
    text-decoration-color: color(display-p3 0.732 0.732 0.732);
    text-underline-offset: max(0.1em, 2.5px);
    transition: text-decoration-color 0.2s ease-in-out;
  }

  .inline-link:hover {
    text-decoration-color: color(display-p3 0.392 0.392 0.392);
    opacity: initial;
  }

  .view-link {
    display: inline-block;

    margin-top: 0.5em;
    margin-left: -1em;
    padding: 1em;

    font-size: 14px;
    font-weight: 500;
    color: #007aff;
    text-decoration: none;
  }

  .message {
    cursor: default;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    width: fit-content;

    font-size: 0.9em;
    font-weight: 600;
    color: #6e6e73;

    animation: fadeOut 0.5s linear forwards;
    animation-play-state: paused;
  }

  .message:hover {
    animation-play-state: running;
  }

  #resumeFrame {
    display: block;
    aspect-ratio: 1 / 1.414;
    width: 80%;
    border: 2px solid #d5d5d5;
  }

  #mobileResumePlaceholder {
    display: none;
  }

  .category-header {
    display: flex;
    gap: 0.5em;
    align-items: end;

    width: fit-content;

    color: unset;
    text-decoration: none;

    h2 {
      margin: 0;
    }

    svg {
      box-sizing: content-box;
      width: 20px;
      height: 20px;
      padding-bottom: 5px;

      opacity: 0.5;
    }
  }

  .category-header:hover {
    .pointing-left {
      transform: translateX(-10px);
    }
  }

  p {
    line-height: 1.5;
    color: grey;
  }

  @media (pointer: coarse) {
    #resumeFrame {
      display: none;
    }

    #mobileResumePlaceholder {
      display: block;
    }
  }

  @media (width >= 430px) {
    .grid {
      grid-template-columns: repeat(2, minmax(0, 1fr));
      gap: 8px;
    }
  }

  @media (width >= 650px) {
    .grid {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width <= 734px) {
    .portrait-container {
      width: 65%;
      padding-left: 0;
    }
  }

  @keyframes fadeOut {
    to {
      opacity: 0;
    }
  }
</style>

<style is:global>
  .bubble {
    position: absolute;
    padding: 8px 11px;
    border: 1px solid #1e8af8;
    background-color: #2790ff;
    color: white;
    border-radius: 24px;
    max-width: 200px;
    pointer-events: none;
    user-select: none;
    word-break: break-word;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  }

  .fly-away {
    transition:
      opacity 7s ease-in,
      transform 7s ease-in-out,
      scale 7s ease-in-out;

    opacity: 0;
    transform: translateY(-100px);
    scale: 0.5;

    @starting-style {
      opacity: 1;
      scale: 1;
      transform: translateY(0);
    }
  }

  .bubble:has(.bubble-image) {
    height: fit-content;
    padding: 6px;
    background-color: white;
    border: none;
    border-radius: 0;
    --shadow-color: 0deg 0% 0%;
    box-shadow:
      0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.11),
      0.8px 1.6px 2px -0.8px hsl(var(--shadow-color) / 0.11),
      2.1px 4.1px 5.2px -1.7px hsl(var(--shadow-color) / 0.11),
      5px 10px 12.6px -2.5px hsl(var(--shadow-color) / 0.11);
  }

  .bubble-image {
    width: 160px;
    height: 160px;
    border-radius: 24px;
    border: 1px solid #444;
    border-radius: 0;
  }

  .emoji {
    font-size: 40px;
  }
</style>
