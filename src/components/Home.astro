---
import { getCollection } from 'astro:content'
import Note from '../components/Note.astro'
import { formatDate } from '../utils/date'
import { Image } from 'astro:assets'
import pointingLeftOriginal from '../assets/pointing-left-original.png'
import hand from '../assets/hand.webp'
import CvSection from './sections/CvSection.astro'
import BlogrollSection from './sections/BlogrollSection.astro'
import AboutSection from './sections/AboutSection.astro'
import Thought from './Thought.astro'

const notes = await getCollection('notes')
---

<main>
  <AboutSection />

  <section>
    <a href="/notes" class="category-header">
      <h2 class="font-medium section-header" id="notes">Notes</h2>
      <div class="pointing-left-container">
        <Image
          src={pointingLeftOriginal}
          alt="Hand pointing left"
          class="pointing-left"
          width={324}
          height={104}
        />
      </div>
    </a>
    <div class="grid">
      {
        notes.map((note) => {
          return (
            <Note
              title={note.data.title}
              text={note.data.preview}
              date={formatDate(note.data.date)}
              id={note.id}
            />
          )
        })
      }
    </div>
  </section>

  <section>
    <a href="/thoughts" class="category-header">
      <h2 class="font-medium section-header" id="thoughts">Thoughts</h2>
      <div class="pointing-left-container">
        <Image
          src={pointingLeftOriginal}
          alt="Hand pointing left"
          class="pointing-left"
          width={324}
          height={104}
        />
      </div>
    </a>
    <div style="display: flex; flex-direction: column; gap: 8px">
      <Thought
        text="Mac folks, any bugs you‚Äôve noticed recently in the Micro.blog app? Fixing a couple little things for macOS 26 Tahoe beta"
        date="April 25, 2024"
      />
      <Thought
        text="Upgraded to the latest Tahoe beta and now a couple of apps seem to be confused. Nova thinks it‚Äôs expired. I have an older serial number, but they should work forever just without updates. I think something might be weird with the system keychain"
        date="April 15, 2024"
      />
      <Thought
        text="Losing my mind again debugging HTTP signatures. So easy to have flakiness between implementations."
        date="March 20, 2024"
      />
    </div>
  </section>

  <CvSection />

  <BlogrollSection />

  <section class="site-section">
    <h2 class="font-medium">About this site</h2>
    <p class="body-text">
      This site is built with <a href="https://astro.build" class="inline-link">Astro</a> and deployed
      via <a href="https://pages.cloudflare.com" class="inline-link">Cloudflare Pages</a>.
    </p>
    <p class="body-text marginless">
      All images are compressed with <a href="https://squoosh.app" class="inline-link">Squoosh</a> and
      processed using <a href="https://www.tinrocket.com/content/hyperdither" class="inline-link"
        >Atkinson Dithering</a
      >.
    </p>
    <p class="body-text">
      The source code is available on <a
        href="https://github.com/ivanesmantovich/esmantovi.ch"
        class="inline-link">GitHub</a
      >.
    </p>
  </section>

  <div class="screen">
    <div class="offering-hand-container">
      <Image src={hand} id="offering-hand" alt="Hand offering something" width={500} />
      <div id="bubble-container"></div>
    </div>
  </div>
</main>

<script>
  // Save scroll position before navigation
  document.addEventListener('astro:before-preparation', () => {
    sessionStorage.setItem('homeScrollPosition', window.scrollY.toString())
  })

  // Restore scroll position after navigation
  document.addEventListener('astro:after-swap', () => {
    const savedPosition = sessionStorage.getItem('homeScrollPosition')
    if (savedPosition) {
      window.scrollTo({ top: parseInt(savedPosition), behavior: 'instant' })
    }
  })

  // Add click handler to hand
  const hand = document.getElementById('offering-hand')
  if (hand) {
    hand.addEventListener('click', () => {
      console.log('clicked')
      const bubbleContainer = document.getElementById('bubble-container')
      if (bubbleContainer) {
        const bubbles = [
          '<span class="emoji">üîÆ</span>',
          '<span class="emoji">üíø</span>',
          '<span class="emoji">üåû</span>',
          '<span class="emoji">üåÖ</span>',
          '<span class="emoji">üèïÔ∏èüêå</span>',
          'Trust the Process & Love Yourself',
          'The mind is everything. What you think you become',
          'Let go of what has passed. Let go of what may come. Let go of what is happening now',
          'The quieter you become, the more you can hear',
          'Within you there is a stillness and sanctuary to which you can retreat at any time',
          'There is more to life than increasing its speed',
          "Love says 'I am everything.' Wisdom says 'I am nothing.' Between the two, my life flows",
          '<img class="bubble-image" src="cheers.webp" alt="cheers" />',
        ]
        const bubble = document.createElement('span')
        bubble.classList.add('bubble', 'fly-away')
        bubble.innerHTML = bubbles[Math.floor(Math.random() * bubbles.length)]
        bubbleContainer.appendChild(bubble)
        setTimeout(() => {
          bubbleContainer.removeChild(bubble)
        }, 7000)
      }
    })
  }
</script>

<style>
  .grid {
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    gap: 20px;
    margin-bottom: 8px;
  }

  .section-header {
    transition: filter 0.3s ease;
  }

  .section-header:hover {
    filter: contrast(50%);
  }

  .section-header:active {
    filter: contrast(30%);
  }

  .pointing-left {
    width: auto;
    height: 26px;
    object-fit: contain;
    transition:
      transform 0.3s ease,
      opacity 0.3s ease,
      filter 0.3s ease;
  }

  @media (pointer: fine) {
    .pointing-left {
      opacity: 0;
      filter: blur(4px);
    }

    section:hover .pointing-left {
      opacity: 1;
      filter: blur(0px);
    }
  }

  @media (pointer: coarse) {
    .pointing-left-container {
      animation-name: pointing-scroll-fade;
      animation-fill-mode: both;
      animation-timeline: --portrait-timeline;
      view-timeline-name: --portrait-timeline;
      view-timeline-axis: block;

      animation-range: entry 0% exit 100%;
    }
  }

  .screen {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    display: flex;
    align-items: center;
    justify-content: center;

    height: 100vh;
  }

  .offering-hand-container {
    position: relative;
  }

  #offering-hand {
    touch-action: pan-y;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    aspect-ratio: 1.35;
    width: 500px;
    max-width: 80vw;
    height: auto;

    transition: transform 0.2s ease;

    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
    -webkit-user-drag: none;
  }

  #offering-hand:hover {
    transform: scale(1.1);
  }

  #offering-hand:active {
    transform: scale(0.9);
  }

  #bubble-container {
    position: absolute;
    top: 35%;

    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
    /* background-color: pink; */
    padding-right: 35px;
  }

  .view-link {
    display: inline-block;

    margin-top: 0.5em;
    margin-left: -1em;
    padding: 1em;

    font-size: 14px;
    font-weight: 500;
    color: #007aff;
    text-decoration: none;
  }

  .message {
    cursor: default;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    width: fit-content;

    font-size: 0.9em;
    font-weight: 600;
    color: #6e6e73;

    animation: fadeOut 0.5s linear forwards;
    animation-play-state: paused;
  }

  .message:hover {
    animation-play-state: running;
  }

  #resumeFrame {
    display: block;
    aspect-ratio: 1 / 1.414;
    width: 80%;
    border: 2px solid #d5d5d5;
  }

  #mobileResumePlaceholder {
    display: none;
  }

  .category-header {
    display: flex;
    gap: 0.5em;

    width: fit-content;

    color: unset;
    text-decoration: none;

    h2 {
      margin: 0 !important;
    }

    img {
      margin-top: 9px;

      @media (width <= 1068px) {
        margin-top: 6px;
      }

      @media (width <= 734px) {
        margin-top: 4px;
      }
    }
  }

  .category-header:hover {
    .pointing-left {
      transform: translateX(-10px);
    }
  }

  @media (pointer: coarse) {
    #resumeFrame {
      display: none;
    }

    #mobileResumePlaceholder {
      display: block;
    }
  }

  @media (width >= 430px) {
    .grid {
      grid-template-columns: repeat(2, minmax(0, 1fr));
      gap: 8px;
    }
  }

  @media (width >= 650px) {
    .grid {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @keyframes fadeOut {
    to {
      opacity: 0;
    }
  }

  @keyframes pointing-scroll-fade {
    0% {
      opacity: 0;
      filter: blur(12px);
    }

    25% {
      opacity: 1;
      filter: blur(0px);
    }

    90% {
      opacity: 1;
      filter: blur(0px);
    }

    100% {
      opacity: 0;
      filter: blur(12px);
    }
  }
</style>

<style is:global>
  .bubble {
    pointer-events: none;
    user-select: none;

    position: absolute;

    max-width: 200px;
    padding: 8px 11px;
    border: 1px solid #1e8af8;
    border-radius: 24px;

    color: white;
    word-break: break-word;

    background-color: #2790ff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  }

  .fly-away {
    transform: translateY(-100px);
    scale: 0.5;
    opacity: 0;
    transition:
      opacity 7s ease-in,
      transform 7s ease-in-out,
      scale 7s ease-in-out;

    @starting-style {
      transform: translateY(0);
      scale: 1;
      opacity: 1;
    }
  }

  .bubble:has(.bubble-image) {
    --shadow-color: 0deg 0% 0%;

    height: fit-content;
    padding: 6px;
    border: none;
    border-radius: 0;

    background-color: white;
    box-shadow:
      0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.11),
      0.8px 1.6px 2px -0.8px hsl(var(--shadow-color) / 0.11),
      2.1px 4.1px 5.2px -1.7px hsl(var(--shadow-color) / 0.11),
      5px 10px 12.6px -2.5px hsl(var(--shadow-color) / 0.11);
  }

  .bubble-image {
    width: 160px;
    height: 160px;
    border: 1px solid #444;
    border-radius: 24px;
    border-radius: 0;
  }

  .emoji {
    font-size: 40px;
  }
</style>
