---
import type { CollectionEntry } from 'astro:content'
import { render } from 'astro:content'
import { formatDate } from '../utils/date'

interface Props {
  thought: CollectionEntry<'thoughts'>
}

const { thought } = Astro.props
const { Content } = await render(thought)
---

<div class="thought">
  <Content />

  <div class="thought-date">{formatDate(thought.data.date)}</div>
</div>

<style>
  .thought {
    width: 100%;
    max-width: 550px;
    padding: 16px 20px;
    border: 1px solid #f0e489;
    border-radius: 28px;

    color: #8c7600;

    background: linear-gradient(155deg, rgba(254, 242, 151, 1) 65%, rgba(231, 217, 124, 1) 100%);
  }

  .thought-date {
    margin-top: 1lh;
    color: #b19a35;
  }
</style>

<script>
  const thoughtDates = document.querySelectorAll('.thought-date')

  thoughtDates.forEach((dateElement) => {
    const dateText = dateElement.textContent
    const today = new Date()
    const yesterday = new Date(today)
    yesterday.setDate(yesterday.getDate() - 1)

    if (!dateText) return

    const noteDate = new Date(dateText)

    if (noteDate.toDateString() === today.toDateString()) {
      dateElement.textContent = 'Today'
    } else if (noteDate.toDateString() === yesterday.toDateString()) {
      dateElement.textContent = 'Yesterday'
    }
  })
</script>
