---
// Define the props interface for type safety
interface Props {
  title: string
  category: string
}

// Destructure the title prop
const { title, category } = Astro.props
---

<div class="experiment">
  <span class="category">
    <svg xmlns="http://www.w3.org/2000/svg" class="ionicon" viewBox="0 0 512 512"
      ><path
        d="M440 432H72a40 40 0 01-40-40V120a40 40 0 0140-40h75.89a40 40 0 0122.19 6.72l27.84 18.56a40 40 0 0022.19 6.72H440a40 40 0 0140 40v240a40 40 0 01-40 40zM32 192h448"
        fill="none"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="32"></path></svg
    >{category}
  </span>
  <h3 class="title">{title}</h3>
  <div class="margin-line"></div>
  <div class="horizontal-lines"></div>
</div>

<style>
  .experiment {
    --shadow-color: 0deg 0% 63%;

    position: relative;

    overflow: hidden;
    display: flex;
    flex-direction: column;

    aspect-ratio: 2 / 1;
    width: 100%;
    border: 1px solid rgba(0, 28, 70, 0.06);
    border-radius: 28px;

    background-color: #ffffff;
    box-shadow:
      0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.34),
      0.4px 0.8px 1px -1.2px hsl(var(--shadow-color) / 0.34),
      1px 2px 2.5px -2.5px hsl(var(--shadow-color) / 0.34);

    transition:
      box-shadow 0.12s ease-out,
      transform 0.12s ease-out;
  }

  .category {
    position: absolute;
    top: 0px;

    display: flex;
    gap: 6px;
    align-items: center;
    justify-content: end;

    width: 100%;
    padding-top: 10px;
    padding-right: 10px;
    padding-left: calc(2.8rem + 10px);

    font-size: 0.8em;
    color: #8b8b8b;
  }

  .category svg {
    flex-shrink: 0;
    align-self: flex-start;
    width: 18px;
    height: 18px;
  }

  /* Title styling */
  .title {
    z-index: 2;

    margin-top: 3.85rem;
    margin-left: 3.5rem;
    padding-right: 15px;

    font-weight: 600;
    line-height: 31px;
  }

  .margin-line {
    position: absolute;
    z-index: 2;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    background-image:
            /* Red margin line */ linear-gradient(
      90deg,
      transparent 2.8rem,
      #fdb7b7e6 2.8rem,
      #fdb7b7e6 calc(2.8rem + 1.5px),
      transparent calc(2.8rem + 1.5px)
    );
  }

  .horizontal-lines {
    position: absolute;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
    margin-top: 85px;

    background-image: repeating-linear-gradient(
      180deg,
      #afafb3,
      #afafb3 1.5px,
      transparent 1.5px,
      transparent 31px
    );
  }

  @media (pointer: fine) {
    .experiment:hover {
      cursor: pointer;
      transform: translateY(-2px);
      box-shadow:
        0.3px 0.5px 0.7px hsl(var(--shadow-color) / 0.36),
        0.8px 1.6px 2px -0.8px hsl(var(--shadow-color) / 0.36),
        2.1px 4.1px 5.2px -1.7px hsl(var(--shadow-color) / 0.36),
        5px 10px 12.6px -2.5px hsl(var(--shadow-color) / 0.36);
    }
  }

  @media (width <= 1068px) {
    .category svg {
      width: 16px;
      height: 16px;
    }
  }

  @media (width >= 430px) {
    .experiment {
      aspect-ratio: 1 / 1;
    }
  }
</style>
