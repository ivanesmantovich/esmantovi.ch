---
// Define the props interface for type safety
interface Props {
  text: string
  color: 'blue' | 'gray'
}

// Destructure the title prop
const { text, color } = Astro.props
---

<button class:list={['aqua-button', color === 'blue' ? 'blue' : 'gray']}><span>{text}</span></button
>

<style>
  button {
    margin-top: 1rem;
    grid-row: 1;
    /* change me to adjust the scale of the buttons */
    font-size: 1.5rem;
    height: 1.75em;
    padding: 0 2em;
    border: none;
    min-width: 6em;
    border-radius: 1000px;
    position: relative;
    overflow: hidden;
    outline: none;
    transition: all ease 0.3s;
  }

  button:hover {
    cursor: pointer;
  }

  button.blue {
    background: linear-gradient(
      rgba(0, 65, 184, 0.625),
      rgba(45, 115, 199, 0.625),
      rgba(33, 160, 196, 0.625)
    );
    box-shadow:
      0 0.375em 0.5em rgba(0, 0, 0, 0.3),
      0 0.125em 0.125em rgba(0, 78, 187, 0.5),
      inset 0 0.25em 0.5em rgba(0, 17, 49, 0.8),
      inset 0 0.375em 0.5em 0.25em rgba(0, 78, 187, 0.75);
  }

  button.blue:focus-visible,
  button.blue:hover {
    box-shadow:
      0 0.375em 0.5em rgba(0, 0, 0, 0.3),
      0 0.125em 0.125em rgba(0, 78, 187, 0.5),
      inset 0 0.25em 0.5em rgba(0, 17, 49, 0.8),
      inset 0 0.375em 0.5em 0.25em rgba(0, 78, 187, 0.75),
      0 0 0.5em rgba(52, 106, 227, 0.5);
    transform: scale(1.02);
  }

  button.gray {
    background: linear-gradient(rgba(160, 160, 160, 0.625), rgba(255, 255, 255, 0.625));
    box-shadow:
      0 0.375em 0.5em rgba(0, 0, 0, 0.2),
      0 0.125em 0.125em rgba(0, 0, 0, 0.3),
      inset 0 0.25em 0.25em rgba(0, 0, 0, 0.4),
      inset 0 0.375em 0.5em 0.25em #bbbbbb;
  }

  button.gray:focus-visible,
  button.gray:hover {
    box-shadow:
      0 0.375em 0.5em rgba(0, 0, 0, 0.2),
      0 0.125em 0.125em rgba(0, 0, 0, 0.3),
      inset 0 0.25em 0.25em rgba(0, 0, 0, 0.4),
      inset 0 0.375em 0.5em 0.25em #bbbbbb,
      0 0 0.5em rgba(0, 0, 0, 0.25);
  }

  button:before {
    content: '';
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    height: 33%;
    background: linear-gradient(rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.3));
    width: calc(100% - 0.875em);
    border-radius: 2em 2em 0.5em 0.5em;
    top: 5%;
    filter: blur(1px);
    z-index: 2;
  }

  button:after {
    content: '';
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    height: 33%;
    background: linear-gradient(rgba(255, 255, 255, 0.2), rgb(255, 255, 255, 0.5));
    width: calc(100% - 1.25em);
    border-radius: 0.75em;
    bottom: 10%;
    filter: blur(3px);
  }

  button span {
    font-weight: 500;
    position: relative;
    top: -1px;
    z-index: 1;
    letter-spacing: 0.0375em;
  }

  button.blue span {
    text-shadow: 0 0.25em 0.2em rgba(30, 77, 161, 0.5);
    color: #ffffffe2;
  }

  button.gray span {
    text-shadow: 0 0.25em 0.2em rgba(0, 0, 0, 0.25);
    color: #444;
  }
</style>
